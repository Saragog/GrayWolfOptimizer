{
for (j in 1:cols)
{
A[i,j] <- fn(c(x,y))
y = y + krok
}
y=pocz
x = x + krok
}
return(A)
}
t = initMatrix(1000,holderTableFunction,-10,10)
t = initMatrix(1000,eggholderFunction,-100,100)
t = initMatrix(1000,eggholderFunction,-100,100)
levelplot(t,panel=panel.levelplot)
t = initMatrix(1000,ackleysFunction,-10,10)
levelplot(t,panel=panel.levelplot)
levelplot(t,panel=panel.levelplot,scales=list(x=list(at=c(2, 5, 7, 9)),
labels=letters[1:4]))
levelplot(t,panel=panel.levelplot,scales=list(y=list(log=TRUE))
)
?seq
?outer
x <- seq(-10, 10, length.out = 100)
y <- seq(-10, 10, length.out = 100)
grid <- expand.grid(x=x, y=y);
View(grid)
outer(x^2, y^2, c)
?cbind
outer(x^2, y^2, cbind)
?Vectorize
outer(x^2, y^2, Vectorize(c))
initVector <- function(x,y, fn) {
A <- vector( length=(x*y))
b=1;
for (i in 1:length(x))
{
for (j in 1:length(y))
{
A[b] <- fn(c(x[i],y[j]))
b = b+1
}
}
return(A)
}
x <- seq(-10, 10, length.out = 100)
y <- seq(-10, 10, length.out = 100)
grid <- expand.grid(x=x, y=y);
r <- initVector(x,y,ackleysFunction)
initVector <- function(x,y, fn) {
A <- vector( length=(length(x)*length(y)))
b=1;
for (i in 1:length(x))
{
for (j in 1:length(y))
{
A[b] <- fn(c(x[i],y[j]))
b = b+1
}
}
return(A)
}
r <- initVector(x,y,ackleysFunction)
grid$z = r
View(grid)
t = initMatrix(1000,ackleysFunction,-10,10)
View(t)
levelplot(z~x*y, grid)
parms = list(
D = 1,
E = 1,
maxIt = 100,
vecMin = rep(-10,-10),
vecMax = rep(10,10),
wolvesNumber = 200)
grayWolfOptimizer(ackleysFunction,2,parms)
x <- seq(-10, 10, length.out = 1000)
y <- seq(-10, 10, length.out = 1000)
grid <- expand.grid(x=x, y=y);
r <- initVector(x,y,sphereFunction)
grid$z = r
levelplot(z~x*y, grid)
source('H:/programowanie/alhe/alhe/check.R')
source('H:/programowanie/alhe/alhe/testPlots.R')
source('H:/programowanie/alhe/alhe/testFunctions.R')
check(1, 1, rep(-10,2), rep(10,2), 200, easomFunction, 2)
source('H:/programowanie/alhe/alhe/check.R')
check(1, 1, rep(-10,2), rep(10,2), 200, easomFunction, 2)
a = check(1, 1, rep(-10,2), rep(10,2), 200, easomFunction, 2)
? loess
?lines
install.packages("ggplot2")
x <- seq(-10, 10, length.out = 1000)
y <- seq(0, 10, length.out = 1000)
qplot(x,y, geom='smooth')
library("ggplot2", lib.loc="C:/Program Files/R/R-3.2.3/library")
qplot(x,y, geom='smooth')
y <- c(1,2,4,5,2,6,7,3,2,0)
qplot(x,y, geom='smooth')
x <- seq(-10, 10, length.out = 10)
qplot(x,y, geom='smooth')
a = check(1, 1, rep(-10,2), rep(10,2), 200, easomFunction, 2)
source('H:/programowanie/alhe/alhe/check.R')
check(1, 1, rep(-10,2), rep(10,2), 200, easomFunction, 2)
check(1, 1, rep(-10,2), rep(10,2), 200, easomFunction, 2)
?list
source('H:/programowanie/alhe/alhe/check.R')
check(1, 1, rep(-10,2), rep(10,2), 200, easomFunction, 2)
?geom_point
a=  check(1, 1, rep(-10,2), rep(10,2), 200, easomFunction, 2)
a
a
?qplot
x <- seq(0, 10, length.out = 10)
y <- c(1,2,4,5,2,6,7,3,2,0)
p = qplot(x,y)
p + stat_smooth()
p = qplot(x,y)
p + stat_smooth(se=F)
p = qplot(x,y,aes(qsec, wt))
?data.frame
data.frame(x,y)
?aes
df = data.frame(x,y)
p = qplot(df,aes(x))
p + stat_smooth(se=F)
qplot(df)
?qplot
qplot(x ,aes(y))
p = qplot(df ,y)
p = qplot(df ,y)
p
df = data.frame(v1=x,v2 = y)
p = qplot(df ,y)
p + stat_smooth(se=F)
p = qplot(df ,x)
p + stat_smooth(se=F)
p + geom_line(aes(y = v1, colour = "var0"))
p = qplot(df ,aes(x))
source('H:/programowanie/alhe/alhe/check.R')
source('H:/programowanie/alhe/alhe/check.R')
parms = list(
parD = 1,
parE = 1,
maxIt = 0,
vecMin = rep(-10,2),
vecMax = rep(10,2),
wolvesNumber = 200)
check(easomFunction,2,parms, num1 = 3,num2 = 3)
parms$maxIt=0
source('H:/programowanie/alhe/alhe/check.R')
parms = list(
parD = 1,
parE = 1,
maxIt = 0,
vecMin = rep(-10,2),
vecMax = rep(10,2),
wolvesNumber = 200)
check(easomFunction,2,parms, num1 = 3,num2 = 3)
source('H:/programowanie/alhe/alhe/check.R')
parms = list(
parD = 1,
parE = 1,
maxIt = 0,
vecMin = rep(-10,2),
vecMax = rep(10,2),
wolvesNumber = 200)
check(easomFunction,2,parms, num1 = 3,num2 = 3)
parms = list(
parD = 1,
parE = 1,
maxIt = 0,
vecMin = rep(-10,2),
vecMax = rep(10,2),
wolvesNumber = 200)
check(easomFunction,2,parms, num1 = 3,num2 = 3)
parms = list(
D = 1,
E = 1,
maxIt = 10,
vecMin = rep(-10,-10),
vecMax = rep(10,10),
wolvesNumber = 200)
check(easomFunction,2,parms, num1 = 3,num2 = 3)
check(easomFunction,2,parms, num1 = 3,num2 = 3)
source('H:/programowanie/alhe/alhe/check.R')
parms = list(
D = 1,
E = 1,
maxIt = 10,
vecMin = rep(-10,-10),
vecMax = rep(10,10),
wolvesNumber = 200)
check(easomFunction,2,parms, num1 = 3,num2 = 3)
check(easomFunction,2,parms, num1 = 3,num2 = 3)
parms = list(
D = 1,
E = 1,
maxIt = 10,
vecMin = rep(-10,-10),
vecMax = rep(10,10),
wolvesNumber = 200)
parms = list(
D = 1,
E = 1,
maxIt = 10,
vecMin = rep(-10,2),
vecMax = rep(10,2),
wolvesNumber = 200)
check(easomFunction,2,parms, num1 = 3,num2 = 3)
a = grayWolfOptimizer(funcName,dimensions,parms)
x <- seq(0, 10, length.out = 10)
y <- c(1,2,4,5,2,6,7,3,2,0)
df = data.frame(v1=x,v2 = y)
p = qplot(data=df, aes(x=v1, y=v2))
p + stat_smooth(se=F)
x <- seq(0, 10, length.out = 10)
y <- c(1,2,4,5,2,6,7,3,2,0)
df = data.frame(v1=x,v2 = y)
p = ggplot(data=df, aes(x=v1, y=v2))
p + stat_smooth(se=F)
p = ggplot(x,y)
p + stat_smooth(se=F)
x <- c(0,1,2,3,5,8,10,20,40,80)
y <- c(1,2,4,5,2,6,7,3,2,0)
df = data.frame(v1=x,v2 = y)
p = ggplot(data=df, aes(x=v1, y=v2))
p + stat_smooth(se=F)
ggplot(data=df, aes(x=v1, y=v2))
p + stat_smooth(se=F)
p + stat_smooth(se=F) + geom_point()
?stat_smooth
p = ggplot(data=df, aes(x))
p + stat_smooth(aes(y = v2, colour = "var0"),se=F) + geom_point(aes(y = v2, colour = "var1"))
parms = list(
D = 1,
E = 1,
maxIt = 10,
vecMin = rep(-10,2),
vecMax = rep(10,2),
wolvesNumber = 10)
parms$wolvesNumber = 50
check(easomFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10)
source('H:/programowanie/alhe/alhe/check.R')
check(easomFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10)
dane = check(easomFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10)
parms = list(
D = 1,
E = 1,
maxIt = 10,
vecMin = rep(-10,2),
vecMax = rep(10,2),
wolvesNumber = 10)
dane = check(easomFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10)
#
x <- dane$x
y <- dane$y
df = data.frame(v1=x,v2 = y)
p = ggplot(data=df, aes(x=v1, y=v2))
p + stat_smooth(se=F) + geom_point()
?abs
parms = list(
D = 1,
E = 1,
maxIt = 10,
vecMin = rep(-10,2),
vecMax = rep(10,2),
wolvesNumber = 10)
dane1 = check(sphereFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10 ,res = 0)
source('H:/programowanie/alhe/alhe/check.R')
dane1 = check(sphereFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10 ,res = 0)
x <- dane1$x
y <- dane1$y
df = data.frame(v1=x,v2 = y)
p = ggplot(data=df, aes(x=v1, y=v2))
p + stat_smooth(se=F) + geom_point()
library(alhe)
dane = check(easomFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10,res = -1)
p + stat_smooth(method = "lm",se=F) + geom_point()
?ns
p + stat_smooth(method = "lm",formula = y ~x,se=F) + geom_point()
p + stat_smooth(method = "lm",formula = y ~log(x),se=F) + geom_point()
p + stat_smooth(method = "gam",se=F) + geom_point()
library(splines)
library(MASS)
p + stat_smooth(method = "lm", formula = y ~ ns(x,3),se=F) + geom_point()
x <- dane1$x
y <- dane1$y
df = data.frame(v1=x,v2 = y)
p = ggplot(data=df, aes(x=v1, y=v2))
p + geom_line() + geom_point()
p + geom_line(size = 3) + geom_point()
p + geom_line(size = 1.5) + geom_point()
p + geom_line(size = 1.5, color = red) + geom_point()
p + geom_line(size = 1.5, color = "red") + geom_point()
parms = list(
D = 1,
E = 1,
maxIt = 10,
vecMin = rep(-10,2),
vecMax = rep(10,2),
wolvesNumber = 5)
dane2 = check(sphereFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10 ,res = 0)
df = data.frame(v1=x,v2 = y,v3=dane2$y)
p = ggplot(data=df, aes(x))
p + geom_line(aes(y = v2, colour = "var0")) +
geom_line(aes(y = v3, colour = "var1"))
p + geom_line(aes(y = v2, colour = "10"),size = 1.5) +
geom_line(aes(y = v3, colour = "5"),size = 1.5)
p = ggplot(data=df, aes(x,colour = "ilosc wilkow"))
p + geom_line(aes(y = v2, colour = "10"),size = 1.5) +
geom_line(aes(y = v3, colour = "5"),size = 1.5)
parms = list(
D = 1,
E = 1,
maxIt = 10,
vecMin = rep(-10,2),
vecMax = rep(10,2),
wolvesNumber = 50)
dane3 = check(sphereFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10 ,res = 0)
df = data.frame(v1=x,v2 = y,v3=dane2$y,v3=dane3$y)
p = ggplot(data=df, aes(x,colour = "ilosc wilkow"))
p + geom_line(aes(y = v2, colour = "10"),size = 1.5) +
geom_line(aes(y = v3, colour = "5"),size = 1.5)+
geom_line(aes(y = v4, colour = "50"),size = 1.5)
df = data.frame(v1=x,v2 = y,v3=dane2$y,v4=dane3$y)
p = ggplot(data=df, aes(x,colour = "ilosc wilkow"))
p + geom_line(aes(y = v2, colour = "10"),size = 1.5) +
geom_line(aes(y = v3, colour = "5"),size = 1.5)+
geom_line(aes(y = v4, colour = "50"),size = 1.5)
save.image("H:/programowanie/alhe/alhe/abc.RData")
parms = list(
D = 1,
E = 1,
maxIt = 10,
vecMin = rep(-10,2),
vecMax = rep(10,2),
wolvesNumber = 10)
dane1 = check(sphereFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10 ,res = 0)
parms$wolvesNumber = 50
dane2 = check(sphereFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10 ,res = 0)
parms$wolvesNumber = 100
dane3 = check(sphereFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10,res = 0)
df = data.frame(v1=dane1$x,v2 = dane1$y,v3=dane2$y,v4=dane3$y)
p = ggplot(data=df, aes(x,colour = "ilosc wilkow"))
p + geom_line(aes(y = v2, colour = "10"),size = 1.5) +
geom_line(aes(y = v3, colour = "50"),size = 1.5)+
geom_line(aes(y = v4, colour = "100"),size = 1.5)
library("ggplot2", lib.loc="C:/Program Files/R/R-3.2.3/library")
library(alhe)
library("ggplot2", lib.loc="C:/Program Files/R/R-3.2.3/library")
library("alhe", lib.loc="C:/Program Files/R/R-3.2.3/library")
library("lattice", lib.loc="C:/Program Files/R/R-3.2.3/library")
parms = list(
D = 1,
E = 1,
maxIt = 10,
vecMin = rep(-10,2),
vecMax = rep(10,2),
wolvesNumber = 10)
dane1 = check(sphereFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10 ,res = 0)
parms$wolvesNumber = 50
dane2 = check(sphereFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10 ,res = 0)
parms$wolvesNumber = 100
dane3 = check(sphereFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10,res = 0)
df = data.frame(v1=dane1$x,v2 = dane1$y,v3=dane2$y,v4=dane3$y)
p = ggplot(data=df, aes(x,colour = "ilosc wilkow"))
p + geom_line(aes(y = v2, colour = "10"),size = 1.5) +
geom_line(aes(y = v3, colour = "50"),size = 1.5)+
geom_line(aes(y = v4, colour = "100"),size = 1.5)
p = ggplot(data=df, aes(x,colour = ilosc wilkow))
p + geom_line(aes(y = v2, colour = "10"),size = 1.5) +
geom_line(aes(y = v3, colour = "50"),size = 1.5)+
geom_line(aes(y = v4, colour = "100"),size = 1.5)
p = ggplot(data=df, aes(x,colour = ilosc wilkow))
p = ggplot(data=df, aes(x,colour = 'ilosc wilkow'))
p + geom_line(aes(y = v2, colour = "10"),size = 1.5) +
geom_line(aes(y = v3, colour = "50"),size = 1.5)+
geom_line(aes(y = v4, colour = "100"),size = 1.5)
p = ggplot(data=df, aes(x = abc,colour = 'ilosc wilkow'))
p + geom_line(aes(y = v2, colour = "10"),size = 1.5) +
geom_line(aes(y = v3, colour = "50"),size = 1.5)+
geom_line(aes(y = v4, colour = "100"),size = 1.5)
p = ggplot(data=df, aes(x,colour = 'ilosc wilkow'))
p + geom_line(aes(y = v2, colour = "10"),size = 1.5) +
geom_line(aes(y = v3, colour = "50"),size = 1.5)+
geom_line(aes(y = v4, colour = "100"),size = 1.5)+
xlab("My x label") +
ylab("My y label")
p = ggplot(data=df, aes(x,colour = 'ilosc wilkow'))
p + geom_line(aes(y = v2, colour = "10"),size = 1.5) +
geom_line(aes(y = v3, colour = "50"),size = 1.5)+
geom_line(aes(y = v4, colour = "100"),size = 1.5)+
xlab("Ilość iteracji") +
ylab("My y label")
df = data.frame(v1=dane1$x,v2 = dane1$y,v3=dane2$y,v4=dane3$y)
p = ggplot(data=df, aes(x,colour = 'ilość wilków'))
p + geom_line(aes(y = v2, colour = "10"),size = 1.5) +
geom_line(aes(y = v3, colour = "50"),size = 1.5)+
geom_line(aes(y = v4, colour = "100"),size = 1.5)+
xlab("Ilość iteracji") +
ylab("skuteczność")
dane = check(easomFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10,res = -1)
dane = check(easomFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10,res = -1)
parms$maxIt = parms$maxIt + itIncrease
dane = check(easomFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10,res = -1)
library(alhe)
source('H:/programowanie/alhe/alhe/check.R')
dane = check(easomFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10,res = -1)
source('H:/programowanie/alhe/alhe/check.R')
dane = check(easomFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10,res = -1)
?print
?string
??string
?sprintf
source('H:/programowanie/alhe/alhe/check.R')
dane = check(easomFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10,res = -1)
source('H:/programowanie/alhe/alhe/check.R')
dane = check(easomFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10,res = -1)
?cat
source('H:/programowanie/alhe/alhe/check.R')
dane = check(easomFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10,res = -1)
parms = list(
D = 1,
E = 1,
maxIt = 5,
vecMin = rep(-10,2),
vecMax = rep(10,2),
wolvesNumber = 10)
a = check(sphereFunction,2,parms, num1 = 5, num2 = 5, itIncrease = 10, res = 0)
dane1 = check(sphereFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10 ,res = 0)
parms$wolvesNumber = 10
dane2 = check(sphereFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10 ,res = 0)
parms$wolvesNumber = 20
dane3 = check(sphereFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10,res = 0)
df = data.frame(v1=dane1$x,v2 = dane1$y,v3=dane2$y,v4=dane3$y)
p = ggplot(data=df, aes(x,colour = 'ilość wilków'))
p + geom_line(aes(y = v2, colour = "5"),size = 1.5) +
geom_line(aes(y = v3, colour = "10"),size = 1.5)+
geom_line(aes(y = v4, colour = "20"),size = 1.5)+
xlab("Ilość iteracji") +
ylab("skuteczność")
load("H:/programowanie/alhe/sphereFunction10Dim.RData")
df = data.frame(v1=dane1$x,v2 = dane1$y,v3=dane2$y,v4=dane3$y)
p = ggplot(data=df, aes(x,colour = 'ilość wilków'))
p + geom_line(aes(y = v2, colour = "5"),size = 1.5) +
geom_line(aes(y = v3, colour = "10"),size = 1.5)+
geom_line(aes(y = v4, colour = "20"),size = 1.5)+
xlab("Ilość iteracji") +
ylab("skuteczność")
View(df)
df = data.frame(v1=dane1$x,v2 = dane1$y,v3=dane2$y,v4=dane3$y)
View(df)
library("ggplot2", lib.loc="C:/Program Files/R/R-3.2.3/library")
p = ggplot(data=df, aes(x,colour = 'ilość wilków'))
p + geom_line(aes(y = v2, colour = "5"),size = 1.5) +
geom_line(aes(y = v3, colour = "10"),size = 1.5)+
geom_line(aes(y = v4, colour = "20"),size = 1.5)+
xlab("Ilość iteracji") +
ylab("skuteczność")
dane1$y
df = data.frame(v1=dane1$x,v2 = dane1$y,v3=dane2$y,v4=dane3$y)
parms = list(
D = 1,
E = 1,
maxIt = 5,
vecMin = rep(-10,2),
vecMax = rep(10,2),
wolvesNumber = 10)
dane1 = check(sphereFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10 ,res = 0)
check <- function(funcName,dimensions,parms, num1, num2, itIncrease,res)
dane1 = check(sphereFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10 ,res = 0)
parms$wolvesNumber = 10
dane2 = check(sphereFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10 ,res = 0)
dane1 = check(sphereFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10 ,res = 0)
parms$wolvesNumber = 10
dane2 = check(sphereFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10 ,res = 0)
library(alhe)
sphereFunction <- function(x)
source('H:/programowanie/alhe/alhe/testFunctions.R')
source('H:/programowanie/alhe/alhe/testFunctions.R')
source('H:/programowanie/alhe/alhe/check.R')
dane1 = check(sphereFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10 ,res = 0)
parms$wolvesNumber = 10
parms = list(
D = 1,
E = 1,
maxIt = 5,
vecMin = rep(-10,2),
vecMax = rep(10,2),
wolvesNumber = 10)
dane1 = check(sphereFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10 ,res = 0)
parms$wolvesNumber = 10
dane2 = check(sphereFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10 ,res = 0)
parms$wolvesNumber = 20
dane3 = check(sphereFunction,2,parms, num1 = 20,num2 = 10, itIncrease = 10,res = 0)
df = data.frame(v1=dane1$x,v2 = dane1$y,v3=dane2$y,v4=dane3$y)
p = ggplot(data=df, aes(x,colour = 'ilość wilków'))
p + geom_line(aes(y = v2, colour = "5"),size = 1.5) +
geom_line(aes(y = v3, colour = "10"),size = 1.5)+
geom_line(aes(y = v4, colour = "20"),size = 1.5)+
xlab("Ilość iteracji") +
ylab("skuteczność")
library("ggplot2", lib.loc="C:/Program Files/R/R-3.2.3/library")
library("lattice", lib.loc="C:/Program Files/R/R-3.2.3/library")
df = data.frame(v1=dane1$x,v2 = dane1$y,v3=dane2$y,v4=dane3$y)
p = ggplot(data=df, aes(x,colour = 'ilość wilków'))
p + geom_line(aes(y = v2, colour = "5"),size = 1.5) +
geom_line(aes(y = v3, colour = "10"),size = 1.5)+
geom_line(aes(y = v4, colour = "20"),size = 1.5)+
xlab("Ilość iteracji") +
ylab("skuteczność")
